@page "/users"

@using CSP.MainApp.Model;
@using CSP.ModuleContracts
@using System.Net.Http.Headers;
@using Newtonsoft.Json; 
@using System.Net;

@inject NavigationManager _navigationManager

<h1>Users example</h1>

<p>This component demonstrates fetching data from a user service (with HTTP call).</p>

@if (users == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<EditForm Model="@userModel" OnValidSubmit="@HandleValidSubmit">
		<InputText id="firstName" @bind-Value="userModel.FirstName" />
		<InputText id="lastName" @bind-Value="userModel.LastName" />

		<br />
		<button type="submit">Add</button>
	</EditForm>

	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>First name</th> 
				<th>Last name</th> 
			</tr>
		</thead>
		<tbody>
			@foreach (var user in users)
			{
				<tr>
					 <td>@user.Id</td>
					 <td>@user.FirstName</td>
					 <td>@user.LastName</td>
					 <td><button type="button" @onclick="() => OnDeleteClicked(user)"  >Delete</button></td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private User[] users;
	private User userModel = new User();

	protected override async Task OnInitializedAsync()
	{
		using var client = new HttpClient();

		client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
		var url = "http://localhost:8080/users/";
		HttpResponseMessage response = await client.GetAsync(url);
		response.EnsureSuccessStatusCode();
		var resp = await response.Content.ReadAsStringAsync();

		var result = JsonConvert.DeserializeObject<List<User>>(resp);
		users = await Task.FromResult(result.ToArray());
	} 

	private async Task HandleValidSubmit()
	{
		using var client = new HttpClient();

		client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
		var url = "http://localhost:8080/users/";
		var parameters = new Dictionary<string, string> { { "firstName", userModel.FirstName }, { "lastName", userModel.LastName } };
		var encodedContent = new FormUrlEncodedContent(parameters);

		var response = await client.PutAsync(url, encodedContent); 
		if (response.StatusCode == HttpStatusCode.OK)
		{
			_navigationManager.NavigateTo("users", true);
		} 
	}

	private async void OnDeleteClicked(User user)
	{
		using var client = new HttpClient();

		client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
		var url = $"http://localhost:8080/users/{Convert.ToInt64(user.Id)}";

		var response = await client.DeleteAsync(url); 
		if (response.IsSuccessStatusCode)
		{
			_navigationManager.NavigateTo("users", true);
		} 
	}
}
