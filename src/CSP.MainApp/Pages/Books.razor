@page "/books"
 
@using CSP.Book;
@using CSP.Book.Samples;
@using System.Net.Http.Headers;
@using IdentityModel.Client;
@using Volo.Abp.Application.Dtos; 

@inject ISampleAppService bookService

<h1>Book example</h1>

<p>This component demonstrates fetching data from a book service (without HTTP call).</p>

@if (books == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Title</th> 
			</tr>
		</thead>
		<tbody>
			@foreach (var book in books.Items)
			{
				<tr>
					<td>@book.Id</td>
					<td>@book.Title</td>
				</tr>
			}
		</tbody>
	</table>
}

<button class="btn btn-primary" @onclick="GetAuthors">Call protected API</button>
<p role="status">@author</p>

@code {
	private ListResultDto<BookDto> books;

	private string author;

	protected override async Task OnInitializedAsync()
	{
		books = await bookService.GetAsync();
	}

	// This is remote call 
	public async Task GetAuthors()
	{
		try
		{
			var client = new HttpClient();
			string api = "https://localhost:44314/api/book/authors";
			var tokenResponse = await GetToken();
			var request = new HttpRequestMessage(HttpMethod.Get, api);
			request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", tokenResponse.AccessToken);

			var response = await client.SendAsync(request);
			response.EnsureSuccessStatusCode();

			author = await response.Content.ReadAsStringAsync();
		}
		catch (Exception ex)
		{
			author = "No access !";
		}
	}

	private async Task<TokenResponse> GetToken()
	{
		var client = new HttpClient();

		string email = "test@abp.io";
		string password = "1q2w3E*";
		string server = "https://localhost:44314/";
		string clientId = "CSP_App";
		//string clientSecret = "1q2w3e*";

		var configuration = await client.GetDiscoveryDocumentAsync(server);
		if (configuration.IsError)
		{
			throw new Exception(configuration.Error);
		}

		var passwordTokenRequest = new PasswordTokenRequest
			{
				Address = configuration.TokenEndpoint,
				ClientId = clientId,
				//	ClientSecret = clientSecret,
				UserName = email,
				Password = password,
				Scope = "CSP profile roles email phone",
			};
		var tokenResponse = await client.RequestPasswordTokenAsync(passwordTokenRequest);

		if (tokenResponse.IsError)
		{
			throw new Exception(tokenResponse.Error);
		}

		return tokenResponse;
	}
}
